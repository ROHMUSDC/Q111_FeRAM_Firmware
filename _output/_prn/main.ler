
                                                              Page :          1
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

      1 //*********************************************************************
        ********
      2 //
      3 // USDC TEMPLATE FIRMWARE for Q111 MCU  
      4 //
      5 // Program:	 LAPIS FeRAM Development Board Demo Code 
      6 //
      7 // Purpose:	 Demonstration Code for use with LAPIS MCU Development Boar
        d 
      8 //
      9 // This single Example code Demonstrates all the following modules work
        ing: 
     10 //		 1.) MCU Initialization (OSC; PORTS; PERIPHERIALS; WDT; etc.) 
     11 //		 2.) Demo of 2Hz INTERRUPT on TBC
     12 //		 3.) Demo of Timer-overflow INTERRUPTS on TMR 8/9
     13 //		 4.) Demo of Timer-overflow INTERRUPTS on TMR A/B
     14 //		 5.) Demo of Timer-overflow INTERRUPTS on TMR E/F
     15 //		 6.) Demo of Hardware PWM Control 
     16 //		 7.) UART TX Demo 
     17 //		 8.) UART RX Demo
     18 //		 9.) ADC Demo...
     19 //		10.) IsC Master Demo...    
     20 //
     21 // Authors:	 C. Schell, K. Bahar, F. Lee, & J. Fontus
     22 //		 	 ROHM Semiconductor USA, LLC
     23 //		 	 US Design Center
     24 //
     25 // Notes: 	
     26 //		1.) RTLU8 RUNTIME LIBRARIES:
     27 //				RTLU8 is a C runtime library for mcu's that use the LAPIS nX-U8 a
        s the CPU core
     28 //				RTLU8 provides a large number of routines that can be used when p
        rogramming 
     29 //				in C. Much effort and time can be saved by using these library ro
        utines.
     30 //				For Example, to use the sprintf library for UART commands, you ne
        ed to add 
     31 //				the "LU8100SW.lib" RT Library. To do this open the LAPIS IDE & se
        lect:
     32 //				'Project -> Options -> Target' from the menu bar.  In the "Genera
        l" Tab, 
     33 //				type in "LU8100SW.lib" to add the RTLU8 runtime library for small
         memory 
     34 //				model containing sprintf and many other routines
     35 //		2.) CHECKING THE PROGRAM SIZE:
     36 //				You can check the program size from the map file generated during

                                                              Page :          2
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

         "Compile" step by the Linker. 
     37 //				Please refer to CCU8 programming guide: (3.1. Map Files and 3.1.4
        . Program and Data size)
     38 //				Results will look something like this:
     39 //					Program and Data Sizes
     40 //					This portion of the map file gives aggregate program and data si
        zes for each segment type.
     41 //						Total size (CODE  ) = 02CE4   (11492)
     42 //						Total size (DATA  ) = 002E7   (743)
     43 //						Total size (BIT   ) = 00000.0 (0.0)
     44 //						Total size (NVDATA) = 00000   (0)
     45 //						Total size (NVBIT ) = 00000.0 (0.0)
     46 //						Total size (TABLE ) = 0828A   (33418)
     47 //
     48 // Started:  April 6th, 2013
     49 // Updated:	 JULY 24th, 2014
     50 //*********************************************************************
        ********
     51 
     52 // ================================ ML610Q111 =========================
        ======== 
     53 //	ML610Q111 MCU PINOUT - TSSOP20 Package
     54 //
     55 // 		Pin 01 of mcu => PC0 / TM9OUT / PWMF0 
     56 // 		Pin 02 of mcu => RESET_N
     57 // 		Pin 03 of mcu => TEST
     58 // 		Pin 04 of mcu => PB0 / CMP1OUT / OUTCLK / PWMC / RXD0 / AIN2 / EXI
        4
     59 // 		Pin 05 of mcu => PB1 / TXD1 / TXD0 / PWMD / AIN3 / EXI5 
     60 // 		Pin 06 of mcu => PB2 / PWME / RXD1 / EXI6 
     61 // 		Pin 07 of mcu => PB3 / TXD1 / SIN / EXI7 
     62 // 		Pin 08 of mcu => PA2 / CMP0OUT / CLKIN / PWME / EXI2 
     63 // 		Pin 09 of mcu => TESTF
     64 // 		Pin 10 of mcu => PC3 / TMFOUT
     65 
     66 // 		Pin 11 of mcu => PC2 / PWMF2 
     67 // 		Pin 12 of mcu => PA1 / EXI1 / AIN1 / CMP1P / PWMD / LSCLK / TMFOUT
        
     68 // 		Pin 13 of mcu => PB4 / CMP0P / SOUT / TXD0 / TXD1
     69 // 		Pin 14 of mcu => PB5 / CMP0M / RXD0 / SCK / SCL / PWMF2
     70 // 		Pin 15 of mcu => PB6 / AIN4 / CLKIN / SDA / PWMF1
     71 // 		Pin 16 of mcu => VSS
     72 // 		Pin 17 of mcu => VDD
     73 // 		Pin 18 of mcu => PB7 / AIN5 / RXD1 / LSCLK / PWMF0 / PWMC
     74 // 		Pin 19 of mcu => PA0 / EXI0 / AIN0 / PWMC / OUTCLK / TM9OUT
     75 // 		Pin 20 of mcu => PC1 / PWMF1

                                                              Page :          3
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

     76 //
     77 //=====================================================================
        ========
     78 
     79 //*********************************************************************
        ********
     80 // Microcontroller's connections on the LAPIS MCU Development Board to 
        the 
     81 //  Plug 'n Play, Raspberry Pi Compatible, Universal Connectors:
     82 //
     83 // Pin-01 => 3.3V Power					Pin-02 => 5.0V Power (VBUS)
     84 // Pin-03 => I2C-SDA  (Q111 I/O B.6)	Pin-04 => no connection
     85 // Pin-05 => I2C-SCL  (Q111 I/O B.5)*	Pin-06 => GROUND
     86 // Pin-07 => no connection*				Pin-08 => UART-TX  (Q111 I/O B.1)
     87 // Pin-09 => no connection				Pin-10 => UART-RX  (Q111 I/O B.0) 
     88 // Pin-11 => GPIO #17 (Q111 I/O A.0)	Pin-12 => GPIO #18 (Q111 I/O B.7)
     89 // Pin-13 => GPIO #21 (Q111 I/O A.1)	Pin-14 => no connection
     90 // Pin-15 => GPIO #22 (Q111 I/O A.2)	Pin-16 => GPIO #23 (Q111 I/O C.2)
     91 // Pin-17 => no connection				Pin-18 => GPIO #24 (Q111 I/O C.3)
     92 // Pin-19 => SPI-MOSI (Q111 I/O B.4)	Pin-20 => no connection
     93 // Pin-21 => SPI-MISO (Q111 I/O B.3)	Pin-22 => GPIO #25 (Q111 I/O B.2)
     94 // Pin-23 => SPI-SCLK (Q111 I/O B.5)*	Pin-24 => SPI-CS0  (Q111 I/O C.0)
        
     95 // Pin-25 => no connection				Pin-26 => SPI-CS1  (Q111 I/O C.1)
     96 // 
     97 //=====================================================================
        ========
     98 //*********************************************************************
        ********
     99 
    100 //*********************************************************************
        ********
    101 // Q111 Microcontroller's I/O Pins at J3 on the LAPIS MCU Development B
        oard 
    102 //
    103 // Pin-01 => A.0				Pin-02 => A.1
    104 // Pin-03 => A.2				Pin-04 => B.0
    105 // Pin-05 => B.1				Pin-06 => B.2
    106 // Pin-07 => B.3				Pin-08 => B.4
    107 // Pin-09 => B.5				Pin-10 => B.6 
    108 // Pin-11 => B.7				Pin-12 => C.0
    109 // Pin-13 => C.1				Pin-14 => C.2
    110 // Pin-15 => C.3				Pin-16 => GROUND
    111 //
    112 //=====================================================================
        ========

                                                              Page :          4
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    113 //*********************************************************************
        ********
    114 
    115 
    116 //***** PREPROCESSOR DIRECTIVES ***************************************
        ********
    117  // INCLUDED FILES...
    118 	#include	<ML610111.H>	// Lapis Micro ML610Q111 on LAPIS MCU Developmen
        t Board
    119 	#include	<stdlib.h>		// General-purpose utilities
    120 	#include	<stdio.h>		// I/O-related processing
    121 	#include 	<common.h>		// Common Definitions
    122 	#include 	<irq.h>			// IRQ Definitions
    123 	#include 	<mcu.h>			// MCU Definition
    124 	#include	<i2c.h>			// I2C Definition
    125 	#include 	<tbc.h>			// Set TBC (Timer Based Clock) API
    126 	#include 	<timer.h>		// Timer Macros & APIs
    127 	#include	<math.h>		// Mathematical functions
    128 	#include 	<uart.h>		// UART Function Prototypes
    129 	#include	<feram_i2c.h>	// FeRAM Function Prototypes
***** main\feram_i2c.h(108) : Warning : W5027 : Meaningless use of an expressio
        n
    130 	//#include	<float.h>		// Numerical limits for floating-point numbers	
    131 	//#include	<string.h>		// Character string manipulation routines
    132 	//#include	<yvals.h>		// Called for by most Header Files
    133 
    134 	//#include 	<main.h>		// Clear WDT API
    135 	//#include	<ctype.h>		// Character classification and conversion 
    136 	//#include	<errno.h>		// Error identifiers Library
    137 	//#include	<limits.h>		// Numerical limits for integers
    138 	//#include	<muldivu8.h>	// Multiplication and Division accelerator
    139 	//#include	<setjmp.h>		// Global jump (allow jumps to locations outsid
        e the current function) 
    140 	//#include	<signal.h>		// Signal handling functions
    141 	//#include	<stdarg.h>		// Variable numbers of arguments
    142 	//#include	<stddef.h>		// Standard types and macros 
    143 	//#include	<yfuns.h>		//  
    144 	
    145 //*********************************************************************
        ********
    146  // I/O PIN DATA ALIASES...
    147 // Connections for Q111 Universal Socket
    148 	#define RX 			PB0D 
    149 	#define TX 			PB1D
    150  
    151 	#define I2C_SDA 	PB6D 

                                                              Page :          5
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    152 	#define I2C_SCL 	PB5D 
    153 
    154 	#define GPIO_17		PA0D
    155 	#define GPIO_21		PA1D
    156 	#define GPIO_22		PA2D
    157 	#define GPIO_18		PB7D
    158 	#define GPIO_23		PC2D
    159 	#define GPIO_24		PC3D
    160 	#define GPIO_25		PB2D
    161 
    162 	#define SPI_MOSI	PB4D
    163 	#define SPI_MISO	PB3D
    164 	#define SPI_SCL 	PB5D
    165 	#define SPI_CS0		PC0D
    166 	#define SPI_CS1 	PC1D 	
    167 	
    168 	
    169 
    170 //*********************************************************************
        ********
    171 //=====================================================================
        ======
    172 //   MACROS: 
    173 //=====================================================================
        ======
    174 
    175 // ===== Peripheral setting.=====
    176 	#define HSCLK_KHZ	( 8192u )	// 8MHz = 8000kHz (will be multiplied by 1
        024 to give 8,192,000Hz)
    177 	#define FLG_SET	    ( 0x01u ) 	
    178 
    179 // ===== SET DESIRED UART SETTINGS HERE! (Options in UART.h) ==========
        ======
    180 #define UART_BAUDRATE		( UART_BR_9600BPS) 	// Data Bits Per Second - Te
        sted at rates from 2400bps to 512000bps!
    181 #define UART_DATA_LENGTH	( UART_LG_8BIT )		// x-Bit Data
    182 #define UART_PARITY_BIT		( UART_PT_NON )			// Parity
    183 #define UART_STOP_BIT		( UART_STP_1BIT )		// x Stop-Bits
    184 #define UART_LOGIC			( UART_NEG_POS )		// Desired Logic
    185 #define UART_DIRECTION		( UART_DIR_LSB )		// LSB or MSB First 
    186 
    187 		// ===== UART Settings =====
    188 		//STRUCTURE:
    189 			static const tUartSetParam  _uartSetParam = {		// UART Parameters
    190 				UART_BAUDRATE,						// Members of Structure...
    191 				UART_DATA_LENGTH,					// Members of Structure...

                                                              Page :          6
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    192 				UART_PARITY_BIT,					// Members of Structure...
    193 				UART_STOP_BIT,						// Members of Structure...
    194 				UART_LOGIC,							// Members of Structure...
    195 				UART_DIRECTION						// Members of Structure...
    196 			};
    197 //=====================================================================
        ======
    198 
    199 
    200 
    201 //*********************************************************************
        ********
    202 //=====================================================================
        ======
    203 //   STRUCTURES: 
    204 //=====================================================================
        ======
    205 	//Example Structure Declaration
    206 	typedef struct {
    207 		unsigned char state     : 1;
    208 		unsigned char state_sub : 2;
    209 		unsigned char reserve   : 5;
    210 	} STRUCT_STATE;	 
    211 
    212 
    213 //*********************************************************************
        ********
    214 
    215 
    216 //*********************************************************************
        ********
    217 //=====================================================================
        ======
    218 //   FUNCTION PROTOTYPES: 
    219 //	Establishes the name and return type of a function and may specify t
        he 
    220 // 	types, formal parameter names and number of arguments to the functi
        on                                 
    221 //=====================================================================
        ======
    222 	void main_clrWDT( void );				// no return value and no arguments
    223 	void Initialization( void );			// no return value and no arguments
    224 	void SetOSC( void );					// no return value and no arguments
    225 
    226 	static void NOPms(unsigned int ms);		// no return value - Delay in ms 
        as Argument

                                                              Page :          7
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    227 	void NOPx( unsigned int MyCount );		// no return value - Count in ms a
        s Argument
    228 	void PWM_B0_ON(int myPeriod, int myDutyCycle);		// no return value - P
        eriod & DutyCycle Variables as Arguments
    229 
    230 	void analog_comparator( void );			
    231 	void PortA_Low( void );					// no return value and no arguments
    232 	void PortB_Low( void );					// no return value and no arguments
    233 	void PortC_Low( void );					// no return value and no arguments
    234 	void PortA_Digital_Inputs( void );		// no return value and no argument
        s
    235 	void PinB0_PWM( void ); 				// no return value and no arguments
    236 	void main_reqNotHalt( void );			// no return value and no arguments
    237 
    238 	static void _initPeri( void );
    239 	static void _intWdt( void );
    240 	static void _intTimer( void );
    241 
    242 	void _funcUartFin( unsigned int size, unsigned char errStat );
    243 	void _intUart( void );
    244 
    245 	void _funcI2CFin( unsigned int size, unsigned char errStat );
    246 	void checkI2C( void );
    247 	void _intI2c( void );
    248 
    249 	void _intADC( void );
    250 	
    251 	void TBC_ISR( void );			// TBC Interrupt Service Routine...
    252 	void TMR89_ISR( void );			// TIMER 8/9 Interrupt Service Routine...
    253 	void TMRAB_ISR( void );			// TIMER A/B Interrupt Service Routine...
    254 	void TMREF_ISR( void );			// TIMER E/F Interrupt Service Routine...
    255 	void ExtInt_ISR( void );		// External Interrupt Interrupt Service Rout
        ine...
    256 	
    257 	void SerialLCD_Init_and_Clear (void);	// no return value and no argume
        nts 
    258 
    259 	void UART_TX_TEST (void);				// no return value and no arguments
    260 	void UART_RX_TEST (void);				// no return value and no arguments
    261 
    262 //*********************************************************************
        ********
    263 //GLOBALS...
    264 
    265 	//UART, I2C & ADC Variables
    266 	unsigned char	_flgUartFin;

                                                              Page :          8
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    267 	unsigned char 	_flgI2CFin;
    268 	unsigned char	_flgADCFin;
    269 	unsigned char	_reqNotHalt;
    270 	
    271 
    272 /*######################################50#############################
        #########*/
    273 /*#                                  APIs                              
              #*/
    274 /*#####################################################################
        #######*/
    275 //*********************************************************************
        ********
    276 //=====================================================================
        ======
    277 //  	Start of MAIN FUNCTION
    278 //=====================================================================
        ======
    279 int main(void) 
    280 {
    281 	//LOCAL VARIABLES
    282 	char char_a;				// -128 to 127
    283 	unsigned char uchar;		// 0-255
    284 	unsigned int uint, delay;	// 0 to 65,535
    285 	long long_a;				// -2,147,483,648 to 2,147,483,647
    286 	float float_a;				// 1.17549435e-38 to 3.40282347e+38
    287 	double double_a;			// 2.2250738585072014e-308 to 1.7976931348623157e+3
        08 
    288 	int i,j,k,x,y;				// -32,768 to 32767
    289 	
    290 	//Write information
    291 	unsigned int writing_location = 0x3E8;
    292 	unsigned char write_data = 0xEE;
    293 	unsigned int write_data_size = 1;
    294 	unsigned char write_slave_address = 0x57;
    295 	unsigned char write_add_data_location = 0x3E8;
***** main\main.c(295) : Warning : W5021 : '=': truncation of constant value
    296 	
    297 	
    298 	
    299 	
    300 	//Read Information (Verify address 0x00 maintains value = 0xAA)
    301 	unsigned int reading_location = 0x00;
    302 	unsigned char read_data = 0x00;
    303 	unsigned int read_data_size = 1;
    304 	unsigned char read_slave_address = 0x57;

                                                              Page :          9
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    305 	
    306 	
    307 	//Read Information (Verify address 0x3E8 maintains value = 0xEE)
    308 	unsigned int Breading_location = 0x3E8;
    309 	unsigned char Bread_data = 0x3E8;
***** main\main.c(309) : Warning : W5021 : '=': truncation of constant value
    310 	unsigned int Bread_data_size = 1;
    311 	unsigned char Bread_slave_address = 0x57;
    312 	
    313 	
    314 	
    315 	
    316 	
    317 	
    318 
    319 	Init:
    320 		Initialization();		// Init Micro...(Ports, Timers, OSC, IRQ's, UART, 
        etc...)
    321 		feram_init();			// Initialize I2C mode
    322 		
    323 		// Writing to EEPROM (0xAA @ address 0x00 & 0xEE @ address 0x3E8)
    324 		feram_stop();
    325 		feram_write(writing_location,&write_data,write_data_size );
    326 		feram_continue();
    327 		
    328 		// Reading from EEPROM @ address 0x00
    329 		feram_stop();
    330 		feram_read(reading_location,&read_data,read_data_size);
    331 		feram_continue();
    332 		
    333 		// Reading from EEPROM @ address 0x3E8
    334 		feram_stop();
    335 		feram_read(Breading_location,&Bread_data,Bread_data_size);
    336 		feram_continue();
    337 		
    338 		
    339 	Primary_Loop:		
    340 		//PLACE USER CODE HERE...
    341 		
    342 		
    343 		
    344 		// ==FLASHING LED CODE== //
    345 		
    346 		GPIO_17 ^=1; 			// flashes LED connected to Q111 I/O A.0
    347 		main_clrWDT();			// Clear WDT
    348 		NOPx(65000);			// Delay slows down the flashing of the LED to be visi

                                                              Page :         10
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        ble to the human eye
***** main\main.c(348) : Warning : W5013 : Parameter mismatch, actual parameter
         converted
    349 		NOPx(65000);			// Delay slows down the flashing of the LED to be visi
        ble to the human eye
***** main\main.c(349) : Warning : W5013 : Parameter mismatch, actual parameter
         converted
    350 		
    351 		//  ==END OF FLASHING LED CODE==  //
    352 		
    353 	goto Primary_Loop;
    354 		
    355 
    356 }//end main
    357 
    358 //=====================================================================
        ======
    359 //  	End of MAIN FUNCTION
    360 //=====================================================================
        ======
    361 //*********************************************************************
        ********
    362 
    363 
    364 
    365 
    366 //*********************************************************************
        ********
    367 //=====================================================================
        ======
    368 //  	Start of Other Functions...
    369 //=====================================================================
        ======
    370 //*********************************************************************
        ********
    371 
    372 
    373 /**********************************************************************
        *********
    374 	Routine Name:	main_clrWDT
    375 	Form:			void main_clrWDT( void )
    376 	Parameters:		void
    377 	Return value:	void
    378 	Description:	clear WDT.
    379 ***********************************************************************
        *******/

                                                              Page :         11
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    380 
    381 void main_clrWDT( void )
***** main\main.c(356) : Warning : W5029 : 'y': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'x': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'k': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'j': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'i': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'double_a': unreferenced local varia
        ble
***** main\main.c(356) : Warning : W5029 : 'float_a': unreferenced local variab
        le
***** main\main.c(356) : Warning : W5029 : 'long_a': unreferenced local variabl
        e
***** main\main.c(356) : Warning : W5029 : 'delay': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'uint': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'uchar': unreferenced local variable
***** main\main.c(356) : Warning : W5029 : 'char_a': unreferenced local variabl
        e
***** main\main.c(356) : Warning : W6002 : 'Init': unreferenced label
    382 {
    383 	//__DI(); // Disable multi-interrupts
    384 		do {
    385 			WDTCON = 0x5Au;
    386 		} while (WDP != 1);
    387 		WDTCON = 0xA5u;
    388 
    389 	//__EI(); // Re-Enable multi-interrupts
    390 }
    391 
    392 //=====================================================================
        ======
    393 //	Initialize Micro to Desired State...
    394 //=====================================================================
        ======
    395 static void Initialization(void){
    396 
    397 	//Initialize Peripherals	
    398 		//BLKCON2 Control Bits...Manually Set 4/12/2013
    399 			DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 
    400 			DUA0  = 0; // 0=> Enables the operation of UART0 
    401 			DUA1  = 1; // 0=> Enables Uart1 
    402 			DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) 
    403 			DI2C0 = 0; // 0=> Enables I2C bus Interface (Master)	
    404 	
    405 		BLKCON4 = 0x00; // SA-ADC: 0=> Enables ; 0xFF=> Disables
    406 		BLKCON6 = 0x00; // Timers 8, 9, A, E, F : 0=> Enables ; 0xFF=> Disabl

                                                              Page :         12
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        es
    407 		BLKCON7 = 0x00; // PWM (PWMC, PWMD, PWME, PWMF : 0=> Enables ; 0xFF=>
         Disables
    408 
    409 	// Port Initialize...
    410 		PortA_Low();	//Initialize all 3 Ports of Q111 Port A to GPIO-Low
    411 		PortB_Low();	//Initialize all 8 Ports of Q111 Port B to GPIO-Low
    412 		PortC_Low();	//Initialize all 4 Ports of Q111 Port C to GPIO-Low
    413 
    414 	// UART INIT...	
    415 		//uart_0_Init();
    416 				
    417 				
    418 	// ===== Set Oscillator Rate =====
    419      	SetOSC(); 	//8MHz
    420 
    421 	// ===== PWM =========================================================
        =======
    422 	//
    423 	//	NOTE: Possible conflict of B.0 with RX pin from UART0
    424 	//	
    425 	//	PinB0_PWM();		// Set up PWM peripheral (Pin on B.0)
    426 	//====================================================================
        =======	
    427 		
    428 	// ===== Comparator =====	
    429 		//analog_comparator();	//Set up anaolg comparator peripheral
    430 
    431 
    432 /* 	// ===== SET SPECIFIC DESIRED PINS AS INPUTS =====
    433 		//Setup PIR Sensor Input on B.4
    434 			//Step 1: Set Pin Direction...
    435 				PB4DIR = 1;			// PortB Bit4 set Direction to INPUT...
    436 			//Step 2: Set Pin I/O Type...
    437 				PB4C1  = 0;			// PortB Bit4 set Type to HIGH-IMPEDANCE INPUT...
    438 				PB4C0  = 0;	
    439 			//Step 3: Set Pin Purpose...
    440 				PB4MD1  = 0;		// PortB Bit4 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    441 				PB4MD0  = 0;
    442 
    443 		//Setup HALL Sensor Input on B.3
    444 			//Step 1: Set Pin Direction...
    445 				PB3DIR = 1;			// PortB Bit3 set Direction to INPUT...
    446 			//Step 2: Set Pin I/O Type...
    447 				PB3C1  = 0;			// PortB Bit3 set Type to HIGH-IMPEDANCE INPUT...

                                                              Page :         13
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    448 				PB3C0  = 0;	
    449 			//Step 3: Set Pin Purpose...
    450 				PB3MD1  = 0;		// PortB Bit3 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    451 				PB3MD0  = 0;
    452 
    453 		//Setup ACCELEROMETER X-SIGNAL Sensor Input on A.2
    454 			//Step 1: Set Pin Direction...
    455 				PA2DIR = 1;			// PortA Bit2 set Direction to INPUT...
    456 			//Step 2: Set Pin I/O Type...
    457 				PA2C1  = 0;			// PortA Bit2 set Type to HIGH-IMPEDANCE INPUT...
    458 				PA2C0  = 0;	
    459 			//Step 3: Set Pin Purpose...
    460 				PA2MD1  = 0;		// PortA Bit2 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    461 				PA2MD0  = 0;
    462 		
    463 		//Setup ACCELEROMETER Y-SIGNAL Sensor Input on A.1
    464 			//Step 1: Set Pin Direction...
    465 				PA1DIR = 1;			// PortA Bit1 set Direction to INPUT...
    466 			//Step 2: Set Pin I/O Type...
    467 				PA1C1  = 0;			// PortA Bit1 set Type to HIGH-IMPEDANCE INPUT...
    468 				PA1C0  = 0;	
    469 			//Step 3: Set Pin Purpose...
    470 				PA1MD1  = 0;		// PortA Bit1 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    471 				PA1MD0  = 0;
    472 
    473 		//Setup ACCELEROMETER Temperature-SIGNAL Sensor Input on A.0
    474 			//Step 1: Set Pin Direction...
    475 				PA0DIR = 1;			// PortA Bit0 set Direction to INPUT...
    476 			//Step 2: Set Pin I/O Type...
    477 				PA0C1  = 0;			// PortA Bit0 set Type to HIGH-IMPEDANCE INPUT...
    478 				PA0C0  = 0;	
    479 			//Step 3: Set Pin Purpose...
    480 				PA0MD1  = 0;		// PortA Bit0 set Purpose to GENERAL PURPOSE Input/Ou
        tput...
    481 				PA0MD0  = 0; */
    482 
    483 	//================== STANDBY CONTROL REGISTER=========================
        ==========
    484 	//
    485 	// SBYCON is a 2-bit special function register to control operating mo
        de of MCU
    486 	//		STP   :   HLT
    487 	// 		BIT 1 :  BIT 0

                                                              Page :         14
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    488 	//  	 0         0     => Program RUN mode (initial value)
    489 	//  	 0         1     => HALT mode
    490 	//  	 1         0     => STOP mode
    491 	//  	 1         1     => (Prohibited)
    492 	// See ML610Q111/ML610Q112 User Manual - Section 4: MCU Control Functi
        on
    493 	//	SBYCON = 0;		// Program RUN mode
    494 	//====================================================================
        ==========
    495 
    496 	//================== VOLTAGE LEVEL SUPERVISOR REGISTER ===============
        ==========
    497 	// 
    498 	// The Q11x mcu's have two channels of VOLTAGE LEVEL SUPERVISORs
    499 	// Accuracy is ±3%
    500 	//
    501 	// The threshold voltages of VLS0 (VDD fall) : 2.85V (Typ. )
    502 	//								  (VDD rise) : 2.92V (Typ. )
    503 	//
    504 	// The threshold voltages of VLS1 (VDD fall) : 4 types selectable 3.3V
        / 3.6V/ 3.9V/ 4.2V (Typ.)
    505 	// The VLS0 can be used as the low voltage level detector reset.
    506 	// 
    507 	// See ML610Q111/ML610Q112 User Manual - Section 22: Voltage Level Sup
        ervisor
    508 	//
    509 	//====================================================================
        ==========
    510 
    511    	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
    512 	// INTERRUPT SETUP...
    513 		//	The ML610Q1xx mcu's have 31 hardware interrupt sources 
    514 		//		 7 External Interrupt Sources
    515 		//		24 Internal Interrupt Sources 
    516 		// EXAMPLE: WDT; VLS; EXTERNAL INT Pins (6); SPI; ADC; I2C (Slave); I
        2C (Master);
    517 		//			TIMERS (6); UART; Comparators (2); PWM's ((4); TBC (4)		
    518 	
    519 		irq_di();	// Disable Interrupts
    520 		//irq_init();	// Initialize Interrupts (All Off and NO Requests)
    521 			//==================================================================
        ==
    522 			//FOR NOTES ONLY...This is all taken care of in "irq_init()"
    523 				// INTERRUPT ENABLE REGISTERS...
    524 				//  IE0 = VOLTAGE LEVEL SUPERVISOR Int.
    525 				//  IE1 = EXTERNAL Ints on B3, B2, B1, B0, A2, A1, & A0

                                                              Page :         15
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    526 				//  IE2 = SPI, A/D, I2C Slave & I2C Master Int.
    527 				//  IE3 = TIMERS 8 & 9 Ints.
    528 				//  IE4 = UART & COMPARATOR Ints.
    529 				//  IE5 = TIMERS A, B, E & F Ints.
    530 				//  IE6 = PWMC, PWMD, PWME, PWMF & 128Hz & 32Hz TBC Ints.
    531 				//  IE7 = 16Hz & 2Hz TBC Ints.
    532 				//IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    533 				//--------------------------------------------------------------
    534 				// INTERRUPT REQUEST FLAG REGISTERS...
    535 				//  IRQ0 = WDT & VLS Int Requests
    536 				//  IRQ1 = EXTERNAL Int Requests
    537 				//  IRQ2 = SPI, A/D, I2C Slave & I2C Master Int Requests
    538 				//  IRQ3 = TIMERS 8 & 9 Int Requests 
    539 				//  IRQ4 = UART & COMPARATOR Int Requests 
    540 				//  IRQ5 = TIMERS A, B, E & F Int Requests 
    541 				//  IRQ6 = PWMC &  128Hz & 32Hz TBC Int Requests 
    542 				//  IRQ7 = 16Hz & 2Hz TBC Int Requests 
    543 				//IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    544 			//==================================================================
        ==
    545 
    546 			// INTERRUPT ENABLE REGISTERS...
    547 				IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
    548 
    549 
    550 			// INTERRUPT REQUEST REGISTERS...
    551 				IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
    552 
    553  			//------------- SET UP UART Interrupts Handler --------------------
        -----------------------
    554 				(void)irq_setHdr( (unsigned char)IRQ_NO_UA0INT, _intUart );
    555 					EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=E
        NABLED)
***** main\main.c(554) : Warning : W5027 : Meaningless use of an expression
    556 					QUA0 = 0;	// Request Flag for the UART_0 	INTERRUPT (1=REQUEST, 0-
        NO-REQUEST)
    557 			//------------------------------------------------------------------
        ----------------------
    558 			
    559  			//------------- SET UP I2C MASTER Interrupts Handler --------------
        -----------------------
    560 				(void)irq_setHdr( (unsigned char)IRQ_NO_I2CMINT, _intI2c );
    561 					EI2CM = 1; // EI2CM is the enable flag for the I2C MASTER interrup
        t (1=ENABLED)
***** main\main.c(560) : Warning : W5027 : Meaningless use of an expression
    562 					QI2CM = 0;

                                                              Page :         16
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    563 			//------------------------------------------------------------------
        ----------------------
    564 			
    565 			//------------- SET UP ADC Interrupts Handler ----------------------
        ----------------------
    566 				(void)irq_setHdr( (unsigned char)IRQ_NO_SADINT, _intADC );
    567 					ESAD = 1; // ESAD is the enable flag for the ADC interrupt (1=ENAB
        LED)
***** main\main.c(566) : Warning : W5027 : Meaningless use of an expression
    568 					QSAD = 0; // Request Flag for the ADC INTERRUPT (1=REQUEST, 0-NO-R
        EQUEST)
    569 			//------------------------------------------------------------------
        ----------------------
    570 			
    571 			//------------- SET UP  xHz TBC Interrupt (Options: 128Hz, 32Hz, 16H
        z, 2Hz) --------------
    572 				(void)irq_setHdr( (unsigned char)IRQ_NO_T2HINT, TBC_ISR );  //Clear
         interrupt request flag
    573 					E2H = 1;	  // Enable x Hz TBC Interrupt (1=ENABLED)
***** main\main.c(572) : Warning : W5027 : Meaningless use of an expression
    574 					Q2H = 0;	  // Request flag for the TIME BASE COUNTER 2Hz Interrupt
        
    575 			// -----			
    576 			//------------- TBC...Set Ratio: : 1:1 => 1_1 ----------------------
        ----------------------
    577 				(void)tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of
         dividing frequency of the time base counter
    578 			//------------------------------------------------------------------
        ---------------------- 
    579 			
    580  			//------------- SET UP TIMER 8/9 Interrupt to increment timers ever
        y ~X ms ---------------
    581 				(void)irq_setHdr( (unsigned char)IRQ_NO_TM9INT, TMR89_ISR );  //Cle
        ar interrupt request flag
***** main\main.c(577) : Warning : W5027 : Meaningless use of an expression
    582 					ETM8 = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(581) : Warning : W5027 : Meaningless use of an expression
    583 					ETM9 = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    584 					QTM8 = 0;		// Timer 8 IRQ request flag; 1=REQUEST
    585 					QTM9 = 0;		// Timer 9 IRQ request flag; 1=REQUEST
    586 					T8CS0 = 1;		// 111 => Select PLLCLK
    587 					T8CS1 = 1;
    588 					T8CS2 = 1;
    589 					T9CS0 = 1;		// 111 => Select PLLCLK
    590 					T9CS1 = 1;
    591 					T9CS2 = 1; 

                                                              Page :         17
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    592 					tm_init(TM_CH_NO_89);
    593 					tm_set89Data(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    594 					tm_set89Source(TM_CS_HTBCLK);
    595 					tm_start89();
    596 					T89M16 = 1;		//1 => sets 16-bit timer mode
    597 				
    598 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    599 					HTD2 = 1;
    600 					HTD1 = 1;
    601 					HTD0 = 1; 
    602 			//------------------------------------------------------------------
        ----------------------
    603 
    604 			
    605  			//------------- SET UP TIMER A/B Interrupt to increment timers ever
        y ~X ms ---------------
    606 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMBINT, TMRAB_ISR );  //Cle
        ar interrupt request flag
    607 					ETMA = 1;	  	// Enable timer 8 Interrupt (1=ENABLED
***** main\main.c(606) : Warning : W5027 : Meaningless use of an expression
    608 					ETMB = 1;	  	// Enable timer 9 Interrupt (1=ENABLED)
    609 					QTMA = 0;		// timer 8 IRQ request flag; 1=REQUEST
    610 					QTMB = 0;		// timer 9 IRQ request flag; 1=REQUEST
    611 					TACS0 = 1;		// 111 => Select PLLCLK
    612 					TACS1 = 1;
    613 					TACS2 = 1;
    614 					TBCS0 = 1;		// 111 => Select PLLCLK
    615 					TBCS1 = 1;
    616 					TBCS2 = 1; 
    617 					tm_init(TM_CH_NO_AB);
    618 					tm_setABData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    619 					tm_setABSource(TM_CS_HTBCLK);
    620 					tm_startAB();
    621 					TABM16 = 1;		//1 => sets 16-bit timer mode
    622 				
    623 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    624 					HTD2 = 1;
    625 					HTD1 = 1;
    626 					HTD0 = 1; 
    627 			//------------------------------------------------------------------
        ----------------------
    628 

                                                              Page :         18
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    629 			
    630 			//------------- SET UP TIMER E/F Interrupt to increment timers every
         ~X ms ---------------
    631 				(void)irq_setHdr( (unsigned char)IRQ_NO_TMFINT, TMREF_ISR );  //Cle
        ar interrupt request flag
    632 					ETME = 1;	  	// Enable timer E Interrupt (1=ENABLED
***** main\main.c(631) : Warning : W5027 : Meaningless use of an expression
    633 					ETMF = 1;	  	// Enable timer F Interrupt (1=ENABLED)
    634 					QTME = 0;		// Timer E IRQ request flag; 1=REQUEST
    635 					QTMF = 0;		// Timer F IRQ request flag; 1=REQUEST
    636 					TECS0 = 1;		// 111 => Select PLLCLK
    637 					TECS1 = 1;
    638 					TECS2 = 1;
    639 					TFCS0 = 1;		// 111 => Select PLLCLK
    640 					TFCS1 = 1;
    641 					TFCS2 = 1;
    642 					tm_init(TM_CH_NO_EF);
    643 					tm_setEFData(8192);				//A value of 1023 should yield 125us interr
        upts at 8.192 MHz
    644 					tm_setEFSource(TM_CS_HTBCLK);
    645 					tm_startEF();
    646 					TEFM16 = 1;		//1 => sets 16-bit timer mode
    647 				
    648 					HTD3 = 1;	//High-Speed Time Base Counter Divide Register: 1111 = 9
        182kHz
    649 					HTD2 = 1;
    650 					HTD1 = 1;
    651 					HTD0 = 1; 
    652 			//------------------------------------------------------------------
        ----------------------
    653 			
    654 			//------------- SET UP B.3 as an input, and prepare to use as an ext
        ernal interrupt ------
    655 					PB3DIR = 1;
    656 					PB3C1 = 0;
    657 					PB3C0 = 0;
    658 					PB3MD1 = 0;
    659 					PB3MD0 = 0;
    660 					PB3E1 = 1;
    661 					PB3E0 = 0;		//PBnE0-1 are used to choose the Rising-Edge Mode for 
        this interrupt
    662 					PB3SM = 0;
    663 			// -----
    664 			//------------- SET UP EXTERNAL INTERRUPT on B.3 -------------------
        ----------------------
    665 			//Options include following pins: A.0; A.1; A.2. B.0; B.1; B.2 & B.3

                                                              Page :         19
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        
    666 			(void)irq_setHdr( (unsigned char)IRQ_NO_PB3INT, ExtInt_ISR );  //Cle
        ar interrupt request flag
    667 					EPB3 = 0;	// 1=> Enables Interrupt
***** main\main.c(666) : Warning : W5027 : Meaningless use of an expression
    668 					QPB3 = 0;	// EXT IRQ request flag; 1=REQUEST	
    669 			//------------------------------------------------------------------
        ----------------------   
    670 	
    671 			
    672 	irq_ei(); // Enable Interrupts
    673 	// IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII  
    674 
    675 	// ===== SET UP WATCH DOG TIMER ======================================
        =======
    676 		WDTMOD = 0x03; 	// 0x03=overflow 8sec...
    677 		main_clrWDT(); 	// Clear WDT   
    678 	//====================================================================
        =======
    679 	
    680 	
    681 	// ===== UART Initialization =========================================
        =======
    682 	//
    683 	//	Pin PB0 of mcu => RX  
    684 	// 	Pin PB1 of mcu => TX 
    685 	// 
    686 		(void)uart_init( (unsigned char)UART_CS_HSCLK,	// Generator       			
        	
    687 				 (unsigned short)HSCLK_KHZ,				// HSCLK frequency 				
    688 				 &_uartSetParam );						// Parameters from Structure    
    689 		uart_PortSet();									// Set UART Port Pins
***** main\main.c(688) : Warning : W5027 : Meaningless use of an expression
    690 		_flgUartFin = 0;
    691 		uart_stop();
    692 
    693 	//	
    694 	//====================================================================
        =======
    695 
    696 	// ===== I2C Initialization ==========================================
        =======
    697 	//	(void)i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_ON);
        
    698 	//	I20SYN = 1;		//Enable Clock Stretching	
    699 	//====================================================================

                                                              Page :         20
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        =======
    700 
    701 
    702 
    703 		
    704 		
    705 }//End Initialization
    706 //=====================================================================
        ======
    707 
    708 
    709 //=====================================================================
        ======
    710 //	OSC set
    711 //=====================================================================
        ======
    712 static void SetOSC(void){
    713 
    714 	//Frequency Control Register 0 (FCON0) 	
    715 	//	used to control the high-speed clock generation circuit and to sele
        ct system clock.
    716 		SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.19
        2MHz.
    717 		SYSC1  = 0;			//...
    718 		OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
    719 		OSCM0  = 0;			//...
    720 		
    721 	// Frequency Control Register 1 (FCON1)
    722 		ENOSC  = 1;			// 1=Enable High Speed Oscillator...
    723 		SYSCLK = 1;			// Select System Clock: 1=HSCLK; 0=LSCLK 
    724 		LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/20
        13
    725 
    726 	__EI();					//INT enable
    727 }
    728 //=====================================================================
        ======
    729 
    730 
    731 //=====================================================================
        ======
    732 //	Analog Comparator setup
    733 //=====================================================================
        ======
    734 void analog_comparator(void){
    735 

                                                              Page :         21
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    736 //Carl's Notes...
    737 
    738 //Step 1: Select the Interrupt Mode
    739 // 	a.) Interrupt Disabled      => CMPxE1 = 0; CMPxE0 = 0;	  
    740 // 	b.) Falling-Edge Int. Mode  => CMPxE1 = 0; CMPxE0 = 1;
    741 // 	c.) Rising-Edge Int. Mode   => CMPxE1 = 1; CMPxE0 = 0;
    742 // 	d.) Both-Edge Int. Mode     => CMPxE1 = 1; CMPxE0 = 1;
    743 
    744 
    745 //Step 2: Enable the Comparator                       => CMPxEN = 1;	
    746 
    747 //Step 3: Wait 3ms to allow Comparator to stabilize
    748 
    749 //Step 4: Read the comparison result			=> CMPxD: 0= +<-; 1= +>-
    750 
    751 //Step 5: Disable the Comparator				=> CMPxEN = 0;	
    752 
    753 
    754 
    755    //Comparator 0...
    756 	CMP0EN  = 0x01; 	// Comparator ON...
    757 	CMP0E1  = 0x00; 	// No Interupt...
    758 	CMP0E0  = 0x00;
    759 	CMP0SM1 = 0x00; 	// Detect without Sampling... 
    760 	CMP0RFS = 0x01; 	// Differential Input on B5
    761 
    762    //Comparator 0 OFF
    763 	CMP0EN  = 0x00;
    764 
    765 
    766 }
    767 //=====================================================================
        ======
    768 
    769 
    770 
    771 //=====================================================================
        ======
    772 //	Clear All 3 Bits of Port A
    773 //=====================================================================
        ======
    774 void PortA_Low(void){
    775 
    776 //Carl's Notes...
    777 
    778 //Step 1: Set Pin Direction...

                                                              Page :         22
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    779 //Step 2: Set Pin I/O Type...
    780 //Step 3: Set Pin Purpose...
    781 //Step 4: Set Pin Data...
    782 
    783 	//Direction...	
    784 	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
    785 	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
    786 	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
    787 
    788 	//I/O Type...
    789 	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
    790 	PA0C0  = 1;		
    791 	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
    792 	PA1C0  = 1;	
    793 	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
    794 	PA2C0  = 1;	
    795 
    796 	//Purpose...
    797 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
    798 	PA0MD0  = 0;	
    799 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
    800 	PA1MD0  = 0;	
    801 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
    802 	PA2MD0  = 0;	
    803 
    804 	//Data...
    805 	PA0D = 0;		// A.0 Output OFF....
    806 	PA1D = 0;		// A.1 Output OFF....
    807 	PA2D = 0;		// A.2 Output OFF....
    808 
    809 	main_clrWDT(); 	// Clear WDT
    810 
    811 }
    812 //=====================================================================
        ======
    813 
    814 //=====================================================================
        ======
    815 //	Clear All 8 Bits of Port B
    816 //=====================================================================
        ======
    817 void PortB_Low(void){
    818 
    819 //Carl's Notes...
    820 
    821 //Step 1: Set Pin Direction...

                                                              Page :         23
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    822 //Step 2: Set Pin I/O Type...
    823 //Step 3: Set Pin Purpose...
    824 //Step 4: Set Pin Data...
    825 
    826 	//Direction...	
    827 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
    828 	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
    829 	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
    830 	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
    831 	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
    832 	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
    833 	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
    834 	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
    835 
    836 	//I/O Type...
    837 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
    838 	PB0C0  = 1;		
    839 	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
    840 	PB1C0  = 1;	
    841 	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
    842 	PB2C0  = 1;	
    843 	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
    844 	PB3C0  = 1;		
    845 	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
    846 	PB4C0  = 1;	
    847 	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
    848 	PB5C0  = 1;	
    849 	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
    850 	PB6C0  = 1;	
    851 	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
    852 	PB7C0  = 1;	
    853 
    854 	//Purpose...
    855 	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
    856 	PB0MD0  = 0;	
    857 	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
    858 	PB1MD0  = 0;	
    859 	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
    860 	PB2MD0  = 0;	
    861 	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
    862 	PB3MD0  = 0;	
    863 	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
    864 	PB4MD0  = 0;	
    865 	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
    866 	PB5MD0  = 0;
    867 	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...

                                                              Page :         24
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    868 	PB6MD0  = 0;	
    869 	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
    870 	PB7MD0  = 0;
    871 
    872 	//Data...
    873 	PB0D = 0;		// B.0 Output OFF....
    874 	PB1D = 0;		// B.1 Output OFF....
    875 	PB2D = 0;		// B.2 Output OFF....
    876 	PB3D = 0;		// B.3 Output OFF....
    877 	PB4D = 0;		// B.4 Output OFF....
    878 	PB5D = 0;		// B.5 Output OFF....
    879 	PB6D = 0;		// B.6 Output OFF....
    880 	PB7D = 0;		// B.7 Output OFF....
    881 
    882 	main_clrWDT(); 	// Clear WDT
    883 
    884 }
    885 //=====================================================================
        ======
    886 
    887 //=====================================================================
        ======
    888 //	Clear All 4 Bits of Port C
    889 //=====================================================================
        ======
    890 void PortC_Low(void){
    891 
    892 //Carl's Notes...
    893 
    894 //Step 1: Set Pin Direction...
    895 //Step 2: Set Pin I/O Type...
    896 //Step 3: Set Pin Purpose...
    897 //Step 4: Set Pin Data...
    898 
    899 	//Direction...	
    900 	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
    901 	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
    902 	PC2DIR = 0;		// PortC Bit2 set to Output Mode...
    903 	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
    904 
    905 
    906 	//I/O Type...
    907 	PC0C1  = 1;		// PortC Bit0 set to CMOS Output...
    908 	PC0C0  = 1;		
    909 	PC1C1  = 1;		// PortC Bit1 set to CMOS Output...
    910 	PC1C0  = 1;	

                                                              Page :         25
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    911 	PC2C1  = 1;		// PortC Bit2 set to CMOS Output...
    912 	PC2C0  = 1;	
    913 	PC3C1  = 1;		// PortC Bit3 set to CMOS Output...
    914 	PC3C0  = 1;		
    915 
    916 	//Purpose...
    917 	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
    918 	PC0MD0  = 0;	
    919 	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
    920 	PC1MD0  = 0;	
    921 	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
    922 	PC2MD0  = 0;	
    923 	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
    924 	PC3MD0  = 0;	
    925 
    926 	//Data...
    927 	PC0D = 0;		// C.0 Output OFF....
    928 	PC1D = 0;		// C.1 Output OFF....
    929 	PC2D = 0;		// C.2 Output OFF....
    930 	PC3D = 0;		// C.3 Output OFF....
    931 
    932 	main_clrWDT(); 	// Clear WDT
    933 
    934 }
    935 //=====================================================================
        ======
    936 
    937 //=====================================================================
        ======
    938 //	Set All 3 Bits of Port A as Digital Input Pins
    939 //=====================================================================
        ======
    940 void PortA_Digital_Inputs(void){
    941 
    942 //Carl's Notes...
    943 
    944 //Step 1: Set Pin Direction...
    945 //Step 2: Set Pin I/O Type...
    946 //Step 3: Set Pin Purpose...
    947 //Step 4: Set Pin Data...
    948 
    949 	//Direction...	
    950 	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
    951 	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
    952 	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
    953 

                                                              Page :         26
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    954 
    955 	//I/O Type...
    956 	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
    957 	PA0C0  = 0;		
    958 	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
    959 	PA1C0  = 0;	
    960 	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
    961 	PA2C0  = 0;	
    962 
    963 	//Purpose...
    964 	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
    965 	PA0MD0  = 0;	
    966 	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
    967 	PA1MD0  = 0;	
    968 	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
    969 	PA2MD0  = 0;	
    970 
    971 	main_clrWDT(); 	// Clear WDT
    972 
    973 }
    974 //=====================================================================
        ======
    975 
    976 //=====================================================================
        ======
    977 //	PWM Output on Port B - Pin 0
    978 //=====================================================================
        ======
    979 void PWM_B0_ON(int myPeriod, int myDutyCycle){
    980 
    981 		
    982 		//SET THE PERIOD...
    983 			PWCP = myPeriod;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 2
        00=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
    984 
    985 		//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
    986 		//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
    987 		//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz
    988 		//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
    989 		//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
    990 		//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
    991 			PWCD =    myDutyCycle;		//12    ~  0.25% duty cycle @ 160Hz
    992 		
    993 		PCRUN = 1;		// TURN PWM ON
    994 
    995 }//END PWM_B0_ON Function

                                                              Page :         27
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

    996 //=====================================================================
        ======
    997 
    998 
    999 
   1000 //=====================================================================
        ======
   1001 //	PWM Output on Port B - Pin 0
   1002 //=====================================================================
        ======
   1003 void PinB0_PWM(void){
   1004 
   1005 //Carl's Notes...
   1006 
   1007 //Step 1: Set Pin Direction...
   1008 //Step 2: Set Pin I/O Type...
   1009 //Step 3: Set Pin Purpose...
   1010 //Step 4: Select the Clock Mode...
   1011 //Step 5: Set the Duty Cycle...
   1012 //Step 5: Start the PWM Counter...
   1013 
   1014 	//Direction...	
   1015 	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
   1016 
   1017 	//I/O Type...
   1018 	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
   1019 	PB0C0  = 1;		
   1020 
   1021 	//Purpose...
   1022 	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
   1023 	PB0MD0  = 1;	
   1024 
   1025 
   1026 	//Select the Clock Mode...
   1027 	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
   1028 	PCCS0 = 1;
   1029 
   1030 	//SET THE PERIOD...(Added April 4th, 2013)
   1031 	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5
        kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
   1032 
   1033 	//SET THE DUTY CYCLE...(Added April 15th, 2013)
   1034 
   1035 	//PWCD =    10;		//10    ~  0.2 % duty cycle @ 120Hz
   1036 	//PWCD =   100;		//100   ~  2.4 % duty cycle @ 120Hz
   1037 	//PWCD =  1000;		//1000  ~ 23.5 % duty cycle @ 120Hz

                                                              Page :         28
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1038 	//PWCD = 4000;		//4000  ~ 94.0 % duty cycle @ 120Hz
   1039 	//PWCD = 4150;		//4150  ~ 99.0 % duty cycle @ 120Hz
   1040 	//PWCD =    20;		//20    ~  0.4 % duty cycle @ 120Hz	
   1041 	PWCD =    12;		//12    ~  0.25% duty cycle @ 160Hz
   1042 
   1043 	PCRUN = 0;		// OFF to start
   1044 
   1045 }
   1046 //=====================================================================
        ======
   1047 
   1048 
   1049 
   1050 
   1051 
   1052 
   1053 
   1054 
   1055 /**********************************************************************
        *********
   1056 	Routine Name:	NOPms
   1057 	Form:			void NOP1000( unsigned int ms )
   1058 	Parameters:		unsigned int sec = "Number of seconds where the device is
         
   1059 						not doing anything"
   1060 	Return value:	void
   1061 	Description:	NOP for x seconds. Uses HTB* clock (512kHz) and 
   1062 					timer A+B (max 0xFFFF)*(HTBCLK = 1/16 * HSCLK 
   1063 					= (1/16)*8192kHz = 512kHz, see HTBDR to change if 
   1064 					we need an even smaller increment timer...)
   1065 					1/(512kHz) * 0xFFFF = 127ms
   1066 					
   1067 ***********************************************************************
        *******/
   1068 /* 
   1069 	void NOPms( unsigned int ms )
   1070 	{
   1071 	unsigned int timerThres;
   1072 	unsigned char TimeFlag;
   1073 	unsigned int TempSec;
   1074 	unsigned int timer;
   1075 	unsigned int timertest;
   1076 
   1077 		TempSec = ms;
   1078 		TimeFlag = 0;
   1079 

                                                              Page :         29
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1080 		tm_init(TM_CH_NO_AB);
   1081 		tm_setABSource(TM_CS_HTBCLK);
   1082 		tm_setABData(0xffff);
   1083 
   1084 		if(ms < 128){
   1085 			timerThres = 0x1FF * ms;
   1086 			TimeFlag = 0;
   1087 		}
   1088 		if(ms == 128){
   1089 			timerThres = 0xFFFF;
   1090 			TimeFlag = 0;
   1091 		}
   1092 		if(ms > 128){
   1093 			while(TempSec > 128){
   1094 				TempSec -= 128;
   1095 				TimeFlag++;
   1096 			}
   1097 			if(TempSec != 0){
   1098 				timerThres = 0x1FF * TempSec;
   1099 			}
   1100 			else{
   1101 				timerThres = 0xFFFF;
   1102 				TimeFlag--;
   1103 			}
   1104 		}
   1105 
   1106 	TimerRestart:
   1107 		main_clrWDT();	
   1108 		//tm_restart89();	//using LSCLK, the maximum delay time we have is ~2
         secs
   1109 		tm_startAB();
   1110 		timer = tm_getABCounter();
   1111 		while(timer < timerThres){
   1112 			timer = tm_getABCounter();
   1113 			timertest = timer;
   1114 		}
   1115 		if(TimeFlag !=0){
   1116 			tm_stopAB();
   1117 			TimeFlag--;
   1118 			timerThres = 0xFFFF;
   1119 			goto TimerRestart;
   1120 		}
   1121 	} //End NOPms 
   1122 */
   1123 
   1124 /**********************************************************************

                                                              Page :         30
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

        *********
   1125 	Routine Name:	_funcUartFin
   1126 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1127 	Parameters:		unsigned int size		 : 
   1128 					unsigned char errStat	 : 
   1129 	Return value:	void
   1130 	Description:	UART transmission completion callback function.
   1131 ***********************************************************************
        *******/
   1132 static void _funcUartFin( unsigned int size, unsigned char errStat )
   1133 {
   1134 	uart_continue();						// Function in UART.c: process to continue send 
        & receive...
   1135 	_flgUartFin = (unsigned char)FLG_SET;
   1136 	main_reqNotHalt();						// uncommented 5/2/2013
   1137 }
   1138 
   1139 /**********************************************************************
        *********
   1140 	Routine Name:	_funcI2CFin
   1141 	Form:			static void _funcUartFin( unsigned int size, unsigned char err
        Stat )
   1142 	Parameters:		unsigned int size		 : 
   1143 					unsigned char errStat	 : 
   1144 	Return value:	void
   1145 	Description:	UART transmission completion callback function.
   1146 ***********************************************************************
        *******/
   1147 static void _funcI2CFin( unsigned int size, unsigned char errStat )
***** main\main.c(1137) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1137) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1148 {
   1149 	i2c_continue();							// Function in UART.c: process to continue send 
        & receive...
   1150 	_flgI2CFin = (unsigned char)FLG_SET;
   1151 	main_reqNotHalt();						// uncommented 5/2/2013
   1152 }
   1153 
   1154 /**********************************************************************
        *********
   1155 	Routine Name:	_intI2c
   1156 	Form:			static void _intI2c( void )
   1157 	Parameters:		void

                                                              Page :         31
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1158 	Return value:	void
   1159 	Description:	I2C handler.
   1160 ***********************************************************************
        *******/
   1161 static void _intI2c( void )
***** main\main.c(1152) : Warning : W5025 : 'errStat': unreferenced formal para
        meter
***** main\main.c(1152) : Warning : W5025 : 'size': unreferenced formal paramet
        er
   1162 {
   1163 	(void)i2c_continue();
   1164 	main_reqNotHalt();
***** main\main.c(1163) : Warning : W5027 : Meaningless use of an expression
   1165 }
   1166 
   1167 /**********************************************************************
        *********
   1168 	Routine Name:	_intADC
   1169 	Form:			static void _intADC( void )
   1170 	Parameters:		void
   1171 	Return value:	void
   1172 	Description:	I2C handler.
   1173 ***********************************************************************
        *******/
   1174 static void _intADC( void )
   1175 {
   1176 	_flgADCFin = 1;
   1177 }
   1178 
   1179 /**********************************************************************
        *********
   1180 	Routine Name:	main_reqNotHalt
   1181 	Form:			void reqNotHalt( void )
   1182 	Parameters:		void
   1183 	Return value:	void
   1184 	Description:	request not halt.
   1185 ***********************************************************************
        *******/
   1186 void main_reqNotHalt( void )
   1187 {
   1188 	_reqNotHalt = (unsigned char)FLG_SET;
   1189 }
   1190 
   1191 /**********************************************************************
        *********
   1192 	Routine Name:	_intUart

                                                              Page :         32
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1193 	Form:			static void _intUart( void )
   1194 	Parameters:		void
   1195 	Return value:	void
   1196 	Description:	UART handler.
   1197 ***********************************************************************
        *******/
   1198 static void _intUart( void )
   1199 {
   1200 	uart_continue(); 	//in UART.c: process to continue send and receive...
        
   1201 }
   1202 
   1203 
   1204 
   1205 
   1206 //=====================================================================
        ======
   1207 //INTERRUPT SERVICE ROUTINE FOR TBC
   1208 static void TBC_ISR( void ) 
   1209 {
   1210 	//Your Code Here...
   1211 	//LED2_pin ^= 1;	// Toggle LED
   1212 	tb_setHtbdiv( (unsigned char)TB_HTD_1_1 ); //Set the ratio of dividing
         frequency of the time base counter
   1213 }
   1214 //=====================================================================
        ======
   1215 
   1216 //=====================================================================
        ======
   1217 //INTERRUPT SERVICE ROUTINE FOR Timer8/9
   1218 static void TMR89_ISR( void ) 
   1219 {
   1220 	//Your Code Here...
   1221 	//LED1_pin ^= 1;
   1222 	tm_init(TM_CH_NO_89);
   1223 	tm_start89();		//Clear & Restart Timer...
   1224 }
   1225 //=====================================================================
        ======
   1226 
   1227 //=====================================================================
        ======
   1228 //INTERRUPT SERVICE ROUTINE FOR TimerA/B
   1229 static void TMRAB_ISR( void ) 
   1230 {

                                                              Page :         33
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1231 	//Your Code Here...
   1232 	//LED4_pin ^= 1;
   1233 	tm_init(TM_CH_NO_AB);
   1234 	tm_startAB();		//Clear & Restart Timer...
   1235 }
   1236 //=====================================================================
        ======
   1237 
   1238 //=====================================================================
        ======
   1239 //INTERRUPT SERVICE ROUTINE FOR TimerE/F
   1240 static void TMREF_ISR( void ) 
   1241 {
   1242 	//Your Code Here...
   1243 	//LED7_pin ^= 1;
   1244 	tm_init(TM_CH_NO_EF);
   1245 	tm_startEF();		//Clear & Restart Timer...
   1246 }
   1247 //=====================================================================
        ======
   1248 
   1249 
   1250 //=====================================================================
        ======
   1251 // ----- ISR for External Interrupt Pin 
   1252 static void ExtInt_ISR( void ) 
   1253 {
   1254 	//Your Code Here...
   1255 	//LED9_pin ^= 1;
   1256 	
   1257 }
   1258 //=====================================================================
        ======
   1259 
   1260 //=====================================================================
        ======
   1261 void NOPx( unsigned int MyCount )
   1262 {
   1263 unsigned int ONCNT = 0;
   1264 unsigned int xxx;
   1265 
   1266 xxx = MyCount;
   1267 
   1268 	while(ONCNT < xxx) {	// NOP for "xxx" Cycles
   1269 		ONCNT++;
   1270 	}

                                                              Page :         34
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1271 	ONCNT = 0;			// Reset Counter 
   1272 }
   1273 //=====================================================================
        ======
   1274 
   1275 
   1276 
   1277 
   1278 
   1279 
   1280 
   1281 
   1282 
   1283 
   1284 
   1285 
   1286 //=====================================================================
        ======
   1287 //Simple function to demonstrate Serial LCD
   1288 void UART_TX_TEST (void)
   1289 {
   1290 	// ===== START UART TX TEST... =====
   1291 		unsigned char UARTStartupMessage[26] = {"ML610Q111 UART - TX Demo: "}
        ;
   1292 		
   1293 		//CLEAR Parallax LCD Display!
   1294 		_flgUartFin = 0;
   1295 		uart_stop();
   1296 		uart_startSend(UARTStartupMessage, 26, _funcUartFin);
   1297 		while(_flgUartFin != 1){
   1298 			main_clrWDT(); 
   1299 		}
   1300 			
   1301 	// ===== END UART TX TEST =====  
   1302 	
   1303 
   1304 }
   1305 //=====================================================================
        ======
   1306 
   1307 //=====================================================================
        ======
   1308 void UART_RX_TEST(void){
   1309 
   1310 	unsigned char	MyRx[1];	//Small Array...for UART Receive, etc
   1311 	int i;

                                                              Page :         35
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

   1312  	
   1313 	// CLEAR the Array...
   1314 		for(i = 0; i<1; i++) 
   1315 		{
   1316 			MyRx[i] = 0x20;	// 0x20 = "Space" => Clear Array
   1317 		} 
   1318 	 
   1319 	
   1320 	// ===== START UART RX TEST... =====
   1321 		_flgUartFin = 0;
   1322 		uart_stop();
   1323 		uart_startReceive(MyRx, 1, _funcUartFin);	// RX!
   1324 		while(_flgUartFin != 1){
   1325 			main_clrWDT();	
   1326 			//LED5_pin ^= 1;	//waiting for data...
   1327 		}
   1328 		
   1329  		//If data in RX Buffer...echo it out the TX port
   1330 		if(MyRx[0] != 0x20){			
   1331 			//Echo the Received Data
   1332 			_flgUartFin = 0;
   1333 			uart_stop();
   1334 			uart_startSend(MyRx, 1, _funcUartFin);	// TX!
   1335 			while(_flgUartFin != 1){
   1336 				main_clrWDT(); 
   1337 			}
   1338 		} 
   1339 	// ===== END UART RX TEST =====
   1340 		
   1341 }
   1342 //=====================================================================
        ======
   1343 
   1344 
   1345 
   1346 ***** main\main.c(1346) : Warning : W5030 : 'tm_get89Counter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_getEFSource': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_getABSource': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_get89Source': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_restartAB': unreferenced static
         function

                                                              Page :         36
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c


 Line #  Source Line

***** main\main.c(1346) : Warning : W5030 : 'tm_clrABCounter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_restartEF': unreferenced static
         function
***** main\main.c(1346) : Warning : W5030 : 'tm_clrEFCounter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_getABCounter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_getEFCounter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_stop89': unreferenced static fu
        nction
***** main\main.c(1346) : Warning : W5030 : 'tm_stopEF': unreferenced static fu
        nction
***** main\main.c(1346) : Warning : W5030 : 'tm_stopAB': unreferenced static fu
        nction
***** main\main.c(1346) : Warning : W5030 : 'tm_setAOneshot': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_setBOneshot': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_set9Oneshot': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : 'tm_set8Oneshot': unreferenced stat
        ic function
***** main\main.c(1346) : Warning : W5030 : '_funcI2CFin': unreferenced static 
        function
***** main\main.c(1346) : Warning : W5030 : 'tm_clr89Counter': unreferenced sta
        tic function
***** main\main.c(1346) : Warning : W5030 : 'tm_restart89': unreferenced static
         function



Error(s)     :  0
Warning(s)   :  53



                                                              Page :         37
                                                              Date : 08-05-2014
                                                              Time :   16:24:37
CCU8 C Compiler Ver.3.41, Source List
Source File : main\main.c



                            STACK INFORMATION
                            -----------------

  FUNCTION                         LOCALS    CONTEXT    OTHERS    TOTAL
  --------                         ------    -------    ------    -----
  _feram_init                      0         2          2         4         
  _feram_write                     0         4          0         4         
  _feram_read                      0         4          0         4         
  _feram_continue                  2         4          8         14        
  _feram_stop                      0         2          0         2         
  _feram_getStatus                 0         0          0         0         
  __i2cFin                         2         6          0         8         
  _main                            4         0          2         6         
  _main_clrWDT                     0         0          0         0         
  _Initialization                  0         2          2         4         
  _SetOSC                          0         0          0         0         
  _analog_comparator               0         0          0         0         
  _PortA_Low                       0         0          0         0         
  _PortB_Low                       0         0          0         0         
  _PortC_Low                       0         0          0         0         
  _PortA_Digital_Inputs            0         0          0         0         
  _PWM_B0_ON                       0         0          0         0         
  _PinB0_PWM                       0         0          0         0         
  __funcUartFin                    0         2          0         2         
  __funcI2CFin                     0         2          0         2         
  __intI2c                         0         2          0         2         
  __intADC                         0         0          0         0         
  _main_reqNotHalt                 0         0          0         0         
  __intUart                        0         0          0         0         
  _TBC_ISR                         0         0          0         0         
  _TMR89_ISR                       0         2          0         2         
  _TMRAB_ISR                       0         2          0         2         
  _TMREF_ISR                       0         2          0         2         
  _ExtInt_ISR                      0         0          0         0         
  _NOPx                            4         4          0         8         
  _UART_TX_TEST                    26        4          2         32        
  _UART_RX_TEST                    2         4          2         8         
